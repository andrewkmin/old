[{"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\routes\\routes.js":"1","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\pages\\Welcome.js":"2","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Posts.js":"3","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Videos.js":"4","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\utils\\data.context.js":"5","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Register.js":"6","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\auth\\verify.token.js":"7","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\CreatePost.js":"8","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Profile.js":"9","C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Settings.js":"10"},{"size":2301,"mtime":1612035536542,"results":"11","hashOfConfig":"12"},{"size":1668,"mtime":1612004141810,"results":"13","hashOfConfig":"12"},{"size":8748,"mtime":1612028730408,"results":"14","hashOfConfig":"12"},{"size":2745,"mtime":1612020485119,"results":"15","hashOfConfig":"12"},{"size":77,"mtime":1611939514313,"results":"16","hashOfConfig":"12"},{"size":5510,"mtime":1612000654943,"results":"17","hashOfConfig":"12"},{"size":588,"mtime":1611947164458,"results":"18","hashOfConfig":"12"},{"size":4092,"mtime":1612035581486,"results":"19","hashOfConfig":"12"},{"size":5170,"mtime":1612034437012,"results":"20","hashOfConfig":"12"},{"size":7588,"mtime":1612035672970,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u3h911",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\routes\\routes.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\pages\\Welcome.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Posts.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Videos.js",[],["44","45"],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\utils\\data.context.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Register.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\auth\\verify.token.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\CreatePost.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Profile.js",[],"C:\\Users\\micha\\Desktop\\armsocial-frontend\\src\\components\\Settings.js",["46"],"import {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Divider,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  Flex,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  useToast,\r\n  Switch,\r\n  useColorMode,\r\n  Button,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  AlertDialogCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AiOutlineUser } from \"react-icons/ai\";\r\nimport { MdEmail, MdLock } from \"react-icons/md\";\r\n\r\nimport _axios from \"../utils/_axios\";\r\nimport _DataContext from \"../utils/data.context\";\r\nimport _AuthContext from \"../auth/auth.context\";\r\n\r\nconst Settings = () => {\r\n  const Toast = useToast();\r\n  const DataContext = useContext(_DataContext);\r\n  const AuthContext = useContext(_AuthContext);\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const {\r\n    isOpen: deleteAccountAlertIsOpen,\r\n    onOpen: deleteAccountAlertOnOpen,\r\n    onClose: deleteAccountAlertOnClose,\r\n  } = useDisclosure();\r\n\r\n  const deleteAccount = async () => {\r\n    const { data } = await _axios.delete(\"/api/accounts/delete\");\r\n    if (!data.error) {\r\n      <Redirect to=\"/logout\" />;\r\n      DataContext.setUserData({});\r\n      AuthContext.setAuthenticated(false);\r\n\r\n      Toast({\r\n        title: \"Deleted\",\r\n        description: \"All of your account data has been deleted\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        status: \"success\",\r\n      });\r\n    } else if (data.error) {\r\n      Toast({\r\n        title: data.error,\r\n        duration: 5000,\r\n        isClosable: true,\r\n        status: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkForChanges = () => {\r\n    // TODO: Show a toast if settings have been changed\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Settings â€” Usocial</title>\r\n      </Helmet>\r\n      <Box m={2}>\r\n        <Container p={5}>\r\n          <Text fontSize=\"3xl\" fontWeight=\"bold\">\r\n            Settings\r\n          </Text>\r\n          <Divider />\r\n          <Box mt={5}>\r\n            {/* Profile Settings */}\r\n            <Stack borderRadius=\"md\" spacing={5} boxShadow=\"lg\" p={5}>\r\n              <Box>\r\n                <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n                  Profile\r\n                </Text>\r\n\r\n                <Box mt={1}>\r\n                  <Flex>\r\n                    <InputGroup>\r\n                      <InputLeftElement>\r\n                        <AiOutlineUser color=\"gray\" />\r\n                      </InputLeftElement>\r\n                      <Input\r\n                        me={1}\r\n                        name=\"firstName\"\r\n                        placeholder={DataContext.userData.firstName}\r\n                        onChange={(event) => {\r\n                          // TODO:\r\n                        }}\r\n                      />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup>\r\n                      <Input\r\n                        ms={1}\r\n                        name=\"lastName\"\r\n                        placeholder={DataContext.userData.lastName}\r\n                        onChange={(event) => {\r\n                          // TODO:\r\n                        }}\r\n                      />\r\n                    </InputGroup>\r\n                  </Flex>\r\n                </Box>\r\n              </Box>\r\n              <Box>\r\n                <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n                  Account\r\n                </Text>\r\n\r\n                <Box mt={2}>\r\n                  <form>\r\n                    <Stack spacing={2}>\r\n                      <InputGroup>\r\n                        <InputLeftElement>\r\n                          <MdEmail color=\"gray\" />\r\n                        </InputLeftElement>\r\n                        <Input\r\n                          required\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          placeholder={DataContext.userData.email}\r\n                          onChange={(event) => {\r\n                            // TODO:\r\n                          }}\r\n                        />\r\n                      </InputGroup>\r\n\r\n                      <InputGroup>\r\n                        <InputLeftElement>\r\n                          <MdLock color=\"gray\" />\r\n                        </InputLeftElement>\r\n                        <Input\r\n                          required\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                        />\r\n                      </InputGroup>\r\n                    </Stack>\r\n                  </form>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Privacy Settings */}\r\n              <Box>\r\n                <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n                  Privacy\r\n                </Text>\r\n\r\n                <RadioGroup name=\"privacy\" mt={2}>\r\n                  <Stack direction=\"row\">\r\n                    <Radio value=\"public\">Public</Radio>\r\n                    <Radio value=\"private\">Private</Radio>\r\n                  </Stack>\r\n                </RadioGroup>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n                  Appearance\r\n                </Text>\r\n\r\n                <Box mt={1}>\r\n                  <Text>\r\n                    <Switch\r\n                      me={2}\r\n                      isChecked={colorMode === \"light\" ? false : true}\r\n                      onChange={toggleColorMode}\r\n                    />\r\n                    {colorMode === \"light\" ? \"ðŸŒž\" : \"ðŸŒš\"}\r\n                  </Text>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box>\r\n                <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n                  Danger Zone\r\n                </Text>\r\n\r\n                <Box mt={1}>\r\n                  <Button\r\n                    onClick={deleteAccountAlertOnOpen}\r\n                    _focus={false}\r\n                    w=\"full\"\r\n                    colorScheme=\"red\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Delete Your Account\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      <AlertDialog\r\n        motionPreset=\"slideInBottom\"\r\n        onClose={deleteAccountAlertOnClose}\r\n        isOpen={deleteAccountAlertIsOpen}\r\n        isCentered\r\n      >\r\n        <AlertDialogOverlay />\r\n\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>Delete account?</AlertDialogHeader>\r\n          <AlertDialogCloseButton _focus={false} />\r\n          <AlertDialogBody>\r\n            <Text fontWeight=\"semibold\">\r\n              Are you sure you want to delete your account and all of the\r\n              information associated with it?\r\n            </Text>\r\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n              Warning, this action is irreversible!\r\n            </Text>\r\n          </AlertDialogBody>\r\n          <AlertDialogFooter>\r\n            <Button _focus={false} onClick={deleteAccountAlertOnClose}>\r\n              No\r\n            </Button>\r\n            <Button\r\n              onClick={() => deleteAccount()}\r\n              _focus={false}\r\n              colorScheme=\"red\"\r\n              ml={3}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":71,"column":9,"nodeType":"53","messageId":"54","endLine":71,"endColumn":24},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'checkForChanges' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]